[{"C:\\Users\\topia\\OneDrive\\Työpöytä\\Ilmastonmuutos\\webproject_react\\src\\index.js":"1","C:\\Users\\topia\\OneDrive\\Työpöytä\\Ilmastonmuutos\\webproject_react\\src\\App.js":"2","C:\\Users\\topia\\OneDrive\\Työpöytä\\Ilmastonmuutos\\webproject_react\\src\\components\\V3.js":"3","C:\\Users\\topia\\OneDrive\\Työpöytä\\Ilmastonmuutos\\webproject_react\\src\\components\\V1_V2.js":"4","C:\\Users\\topia\\OneDrive\\Työpöytä\\Ilmastonmuutos\\webproject_react\\src\\components\\V9.js":"5","C:\\Users\\topia\\OneDrive\\Työpöytä\\Ilmastonmuutos\\webproject_react\\src\\components\\try.js":"6"},{"size":240,"mtime":1669800682000,"results":"7","hashOfConfig":"8"},{"size":322,"mtime":1669976976581,"results":"9","hashOfConfig":"8"},{"size":2673,"mtime":1669893237904,"results":"10","hashOfConfig":"8"},{"size":3511,"mtime":1669800682000,"results":"11","hashOfConfig":"8"},{"size":2266,"mtime":1669996455746,"results":"12","hashOfConfig":"8"},{"size":1481,"mtime":1669976954715,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"b538tb",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"17"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"17"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"17"},"C:\\Users\\topia\\OneDrive\\Työpöytä\\Ilmastonmuutos\\webproject_react\\src\\index.js",[],[],[],"C:\\Users\\topia\\OneDrive\\Työpöytä\\Ilmastonmuutos\\webproject_react\\src\\App.js",["38","39","40"],[],"import './App.css';\r\nimport V1_V2 from './components/V1_V2';\r\nimport V3 from './components/V3';\r\nimport V9 from './components/V9';\r\nimport V8 from './components/try';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div>      \r\n      <div>\r\n        <V9/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//    <V1_V2/> \r\n\r\nexport default App;","C:\\Users\\topia\\OneDrive\\Työpöytä\\Ilmastonmuutos\\webproject_react\\src\\components\\V3.js",["41","42"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\n\r\nimport 'chartjs-adapter-date-fns';\r\nimport { Chart } from 'chart.js';\r\n\r\n\r\n\r\nexport default function V1() {\r\n\r\n    //set time data\r\n    const URL = \"http://127.0.0.1:8080/getalldata\"\r\n\r\n    const [data, setData] = useState();\r\n    useEffect(() => {\r\n        const address = URL\r\n        console.log(address);\r\n        axios.get(address)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setData(response.data);\r\n            }).catch(error => {\r\n                alert(error)\r\n            })\r\n\r\n    }, [])\r\n\r\n    //chart data\r\n    const chartData = {\r\n        datasets: [\r\n            {\r\n                label: \"Annual average\",\r\n                data: data,\r\n                backgroundColor: 'red',\r\n                borderColor: 'red',\r\n                borderWidth: 1,\r\n                parsing: {\r\n                    xAxisKey: \"date\",\r\n                    yAxisKey: \"annualavg\",\r\n                  },\r\n                pointRadius: 0\r\n            },\r\n            {\r\n                label: \"Monthly average\",\r\n                data: data,\r\n                backgroundColor: 'Blue',\r\n                borderColor: 'Blue',\r\n                borderWidth: 1,\r\n                parsing: {\r\n                    xAxisKey: \"date\",\r\n                    yAxisKey: \"monthlyavg\",\r\n                  },\r\n                pointRadius: 0\r\n            },\r\n        ]\r\n    };\r\n\r\n    //options\r\n    const options = {\r\n        spanGaps: true,\r\n        plugins: {\r\n            title: {\r\n                display: true,\r\n                text: 'Atmospheric CO2 concentrations from Mauna Loa measurements'\r\n            }\r\n        },\r\n        scales: {\r\n            x: {\r\n                type: 'time',\r\n                time: {\r\n                    unit: 'year'\r\n                }\r\n            },\r\n            y: {\r\n                position: \"right\",\r\n                grace: '5%',\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div style={{ display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>\r\n                <Line options={options} data={chartData} width=\"500px\" height=\"auto\" />\r\n            </div>\r\n            <div>\r\n                <a href=\"https://gml.noaa.gov/ccgg/about/co2_measurements.html\">Data measurement description </a>\r\n            </div>\r\n            <div>\r\n                <p>This graph describes atmospheric CO2 concentrations from Mauna Loa by annual and monthly average.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\topia\\OneDrive\\Työpöytä\\Ilmastonmuutos\\webproject_react\\src\\components\\V1_V2.js",["43","44"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\n\r\nimport 'chartjs-adapter-date-fns';\r\nimport { Chart } from 'chart.js';\r\n\r\n\r\n\r\nexport default function V1() {\r\n\r\n    //set time data\r\n    const URL = \"http://127.0.0.1:8080/getalldata\"\r\n\r\n    const [data, setData] = useState();\r\n    useEffect(() => {\r\n        const address = URL\r\n        console.log(address);\r\n        axios.get(address)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setData(response.data);\r\n            }).catch(error => {\r\n                alert(error)\r\n            })\r\n    }, [])\r\n\r\n    //chart data\r\n    const chartData = {\r\n\r\n        datasets: [\r\n            {\r\n                label: \"2000 year temperatures\",\r\n                data: data,\r\n                backgroundColor: 'red',\r\n                borderColor: 'red',\r\n                borderWidth: 1,\r\n                parsing: {\r\n                    xAxisKey: \"date\",\r\n                    yAxisKey: \"globalc\",\r\n                  },\r\n                pointRadius: 0\r\n            },\r\n            {\r\n                label: \"Global \",\r\n                data: data,\r\n                backgroundColor: 'yellow',\r\n                borderColor: 'yellow',\r\n                borderWidth: 1,\r\n                parsing: {\r\n                    xAxisKey: \"date\",\r\n                    yAxisKey: \"globald\",\r\n                  },\r\n                pointRadius: 0\r\n            },\r\n            {\r\n                label: \"Northern Hemisphere\",\r\n                data: data,\r\n                backgroundColor: 'blue',\r\n                borderColor: 'blue',\r\n                borderWidth: 1,\r\n                parsing: {\r\n                    xAxisKey: \"date\",\r\n                    yAxisKey: \"northernd\",\r\n                  },\r\n                pointRadius: 0\r\n            },\r\n            {\r\n                label: \"Southern Hemisphere\",\r\n                data: data,\r\n                backgroundColor: 'green',\r\n                borderColor: 'green',\r\n                borderWidth: 1,\r\n                parsing: {\r\n                    xAxisKey: \"date\",\r\n                    yAxisKey: \"southernd\",\r\n                  },\r\n                pointRadius: 0\r\n            },\r\n\r\n        ]\r\n    };\r\n\r\n    //options\r\n    const options = {\r\n        plugins: {\r\n            title: {\r\n                display: true,\r\n                text: 'Temperature anomalies form 1850'\r\n            }\r\n        },\r\n        scales: {\r\n            x: {\r\n                type: 'time',\r\n                time: {\r\n                    unit: 'year'\r\n                }\r\n            },\r\n            y: {\r\n                position: \"right\",\r\n                grace: '5%',\r\n                ticks: {\r\n                    stepSize: 0.5\r\n                },\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div style={{ display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>\r\n                <Line options={options} data={chartData} width=\"500px\" height=\"auto\" />\r\n            </div>\r\n            <div>\r\n                <a href=\"https://gml.noaa.gov/ccgg/about/co2_measurements.html\">Co2 measurements</a>\r\n            </div>\r\n            <div>\r\n                <p>This graph describes CO2 measurements globally, by northern hemisphere, by southern hemisphere and compares it to data of 2000 year temperatures. </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\topia\\OneDrive\\Työpöytä\\Ilmastonmuutos\\webproject_react\\src\\components\\V9.js",["45","46"],[],"import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport 'chartjs-adapter-date-fns';\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\nimport { Chart } from 'chart.js';\r\n\r\n\r\n\r\nexport default function V() {\r\n\r\n    //set time data\r\n    const URL = \"http://127.0.0.1:8080/getalldata\"\r\n\r\n    const [data, setData] = useState();\r\n    useEffect(() => {\r\n        const address = URL\r\n        console.log(address);\r\n        axios.get(address)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setData(response.data);\r\n            }).catch(error => {\r\n                alert(error)\r\n            })\r\n\r\n    }, [])\r\n\r\n    //chart data\r\n    const chartData = {\r\n          labels: [\r\n    'Energy',\r\n    'Industrial processes',\r\n    'Agriculture',\r\n    'Waste'\r\n  ],\r\n  datasets: [{\r\n    label: 'Share of global greenhouse gas emissions',\r\n    data: data && data.map(d => d.sector_percent),\r\n    backgroundColor: [\r\n      'rgb(255, 99, 132)',\r\n      'rgb(54, 162, 235)',\r\n      'rgb(2, 255, 83)',\r\n     'rgb(255, 205, 81)',\r\n      'rgb(255, 205, 86)'\r\n    ],\r\n    hoverOffset: 4\r\n  }\r\n]\r\n    };\r\n const options = {\r\n  canvas : {\r\n    height: 450,\r\n    width: 600,\r\n\r\n  },\r\n  \r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Share of global greenhouse gas emissions\",\r\n      },\r\n    },\r\n \r\n    tooltips:{\r\n      enabled: true,\r\n      displayColors: false,\r\n      callback: {\r\n        label: function(tooltipItem, data) {\r\n          return 'Hello';\r\n        }\r\n      }\r\n    },\r\n   \r\n      \r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <div style={{ display: 'flex', alignItems: 'center', flexWrap: 'wrap' }}>\r\n            <Doughnut options={options} data={chartData} width=\"900px\" height=\"900px\" />\r\n        </div>\r\n        <div>\r\n            <a href=\"https://gml.noaa.gov/ccgg/about/co2_measurements.html\">Data measurement description </a>\r\n        </div>\r\n        <div>\r\n            <p>This graph describes atmospheric CO2 concentrations from Mauna Loa by annual and monthly average.</p>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n","C:\\Users\\topia\\OneDrive\\Työpöytä\\Ilmastonmuutos\\webproject_react\\src\\components\\try.js",["47","48","49"],[],"import { Chart } from \"chart.js/auto\";\r\nimport \"chartjs-adapter-luxon\";\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\nconst URL = \"http://127.0.0.1:8080/getalldata\"\r\n\r\n\r\nexport default function TimeLineGraphDemo() {\r\n  \r\n  \r\nconst [data, setData] = useState();\r\nuseEffect(() => {\r\n    const address = URL\r\n    console.log(address);\r\n    axios.get(address)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setData(response.data);\r\n        }).catch(error => {\r\n            alert(error)\r\n        })\r\n\r\n}, [])\r\n  \r\nconst chardata = {\r\n    labels: [\r\n    'Energy',\r\n    'Industrial processes',\r\n    'Agriculture',\r\n    'Waste'\r\n    ],\r\n    datasets: [{\r\n      label: 'Share of global greenhouse gas emissions',\r\n      data:data,\r\n      backgroundColor: [\r\n        'rgb(255, 99, 132)',\r\n        'rgb(54, 162, 235)',\r\n        'rgb(255, 205, 86)'\r\n      ],\r\n      hoverOffset: 4\r\n    }]\r\n  };\r\nconst config = {\r\n  type: 'doughnut',\r\n  data: data && data.map(d => d.sector_percent),\r\n};\r\n  \r\nconst options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Time Line Graph Demonstration\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"1000px\" }}>\r\n      <h1>TimeLineGraphDemo</h1>\r\n      <Doughnut options={options} data={data} />\r\n    </div>\r\n  );\r\n}",{"ruleId":"50","severity":1,"message":"51","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":13},{"ruleId":"50","severity":1,"message":"54","line":3,"column":8,"nodeType":"52","messageId":"53","endLine":3,"endColumn":10},{"ruleId":"50","severity":1,"message":"55","line":5,"column":8,"nodeType":"52","messageId":"53","endLine":5,"endColumn":10},{"ruleId":"50","severity":1,"message":"56","line":6,"column":19,"nodeType":"52","messageId":"53","endLine":6,"endColumn":26},{"ruleId":"50","severity":1,"message":"57","line":9,"column":10,"nodeType":"52","messageId":"53","endLine":9,"endColumn":15},{"ruleId":"50","severity":1,"message":"56","line":6,"column":19,"nodeType":"52","messageId":"53","endLine":6,"endColumn":26},{"ruleId":"50","severity":1,"message":"57","line":9,"column":10,"nodeType":"52","messageId":"53","endLine":9,"endColumn":15},{"ruleId":"50","severity":1,"message":"56","line":5,"column":19,"nodeType":"52","messageId":"53","endLine":5,"endColumn":26},{"ruleId":"50","severity":1,"message":"57","line":6,"column":10,"nodeType":"52","messageId":"53","endLine":6,"endColumn":15},{"ruleId":"50","severity":1,"message":"57","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":15},{"ruleId":"50","severity":1,"message":"58","line":28,"column":7,"nodeType":"52","messageId":"53","endLine":28,"endColumn":15},{"ruleId":"50","severity":1,"message":"59","line":46,"column":7,"nodeType":"52","messageId":"53","endLine":46,"endColumn":13},"no-unused-vars","'V1_V2' is defined but never used.","Identifier","unusedVar","'V3' is defined but never used.","'V8' is defined but never used.","'ChartJS' is defined but never used.","'Chart' is defined but never used.","'chardata' is assigned a value but never used.","'config' is assigned a value but never used."]