{"ast":null,"code":"import getISOWeekYear from \"../getISOWeekYear/index.js\";\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name lastDayOfISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Return the last day of an ISO week-numbering year for the given date.\r\n *\r\n * @description\r\n * Return the last day of an ISO week-numbering year,\r\n * which always starts 3 days before the year's first Thursday.\r\n * The result will be in the local timezone.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|Number} date - the original date\r\n * @returns {Date} the end of an ISO week-numbering year\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // The last day of an ISO week-numbering year for 2 July 2005:\r\n * const result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\r\n * //=> Sun Jan 01 2006 00:00:00\r\n */\n\nexport default function lastDayOfISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  date.setDate(date.getDate() - 1);\n  return date;\n}","map":{"version":3,"names":["getISOWeekYear","startOfISOWeek","requiredArgs","lastDayOfISOWeekYear","dirtyDate","arguments","year","fourthOfJanuary","Date","setFullYear","setHours","date","setDate","getDate"],"sources":["C:/Users/Miia/Documents/Webbiprojekti/Ilmastonmuutos/webproject_react/node_modules/date-fns/esm/lastDayOfISOWeekYear/index.js"],"sourcesContent":["import getISOWeekYear from \"../getISOWeekYear/index.js\";\r\nimport startOfISOWeek from \"../startOfISOWeek/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name lastDayOfISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Return the last day of an ISO week-numbering year for the given date.\r\n *\r\n * @description\r\n * Return the last day of an ISO week-numbering year,\r\n * which always starts 3 days before the year's first Thursday.\r\n * The result will be in the local timezone.\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|Number} date - the original date\r\n * @returns {Date} the end of an ISO week-numbering year\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // The last day of an ISO week-numbering year for 2 July 2005:\r\n * const result = lastDayOfISOWeekYear(new Date(2005, 6, 2))\r\n * //=> Sun Jan 01 2006 00:00:00\r\n */\r\n\r\nexport default function lastDayOfISOWeekYear(dirtyDate) {\r\n  requiredArgs(1, arguments);\r\n  var year = getISOWeekYear(dirtyDate);\r\n  var fourthOfJanuary = new Date(0);\r\n  fourthOfJanuary.setFullYear(year + 1, 0, 4);\r\n  fourthOfJanuary.setHours(0, 0, 0, 0);\r\n  var date = startOfISOWeek(fourthOfJanuary);\r\n  date.setDate(date.getDate() - 1);\r\n  return date;\r\n}"],"mappings":"AAAA,OAAOA,cAAc,MAAM,4BAA4B;AACvD,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,YAAY,MAAM,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,oBAAoB,CAACC,SAAS,EAAE;EACtDF,YAAY,CAAC,CAAC,EAAEG,SAAS,CAAC;EAC1B,IAAIC,IAAI,GAAGN,cAAc,CAACI,SAAS,CAAC;EACpC,IAAIG,eAAe,GAAG,IAAIC,IAAI,CAAC,CAAC,CAAC;EACjCD,eAAe,CAACE,WAAW,CAACH,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3CC,eAAe,CAACG,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpC,IAAIC,IAAI,GAAGV,cAAc,CAACM,eAAe,CAAC;EAC1CI,IAAI,CAACC,OAAO,CAACD,IAAI,CAACE,OAAO,EAAE,GAAG,CAAC,CAAC;EAChC,OAAOF,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}