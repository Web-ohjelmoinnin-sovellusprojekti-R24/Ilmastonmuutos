{"ast":null,"code":"import isSameWeek from \"../isSameWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name isSameISOWeek\r\n * @category ISO Week Helpers\r\n * @summary Are the given dates in the same ISO week (and year)?\r\n *\r\n * @description\r\n * Are the given dates in the same ISO week (and year)?\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|Number} dateLeft - the first date to check\r\n * @param {Date|Number} dateRight - the second date to check\r\n * @returns {Boolean} the dates are in the same ISO week (and year)\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\r\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 1 September 2014 and 1 September 2015 in the same ISO week?\r\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2015, 8, 1))\r\n * //=> false\r\n */\n\nexport default function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {\n    weekStartsOn: 1\n  });\n}","map":{"version":3,"names":["isSameWeek","requiredArgs","isSameISOWeek","dirtyDateLeft","dirtyDateRight","arguments","weekStartsOn"],"sources":["C:/Users/Miia/Documents/Webbiprojekti/Ilmastonmuutos/webproject_react/node_modules/date-fns/esm/isSameISOWeek/index.js"],"sourcesContent":["import isSameWeek from \"../isSameWeek/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name isSameISOWeek\r\n * @category ISO Week Helpers\r\n * @summary Are the given dates in the same ISO week (and year)?\r\n *\r\n * @description\r\n * Are the given dates in the same ISO week (and year)?\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|Number} dateLeft - the first date to check\r\n * @param {Date|Number} dateRight - the second date to check\r\n * @returns {Boolean} the dates are in the same ISO week (and year)\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Are 1 September 2014 and 7 September 2014 in the same ISO week?\r\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 1 September 2014 and 1 September 2015 in the same ISO week?\r\n * const result = isSameISOWeek(new Date(2014, 8, 1), new Date(2015, 8, 1))\r\n * //=> false\r\n */\r\n\r\nexport default function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {\r\n  requiredArgs(2, arguments);\r\n  return isSameWeek(dirtyDateLeft, dirtyDateRight, {\r\n    weekStartsOn: 1\r\n  });\r\n}"],"mappings":"AAAA,OAAOA,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,YAAY,MAAM,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,aAAa,CAACC,aAAa,EAAEC,cAAc,EAAE;EACnEH,YAAY,CAAC,CAAC,EAAEI,SAAS,CAAC;EAC1B,OAAOL,UAAU,CAACG,aAAa,EAAEC,cAAc,EAAE;IAC/CE,YAAY,EAAE;EAChB,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}