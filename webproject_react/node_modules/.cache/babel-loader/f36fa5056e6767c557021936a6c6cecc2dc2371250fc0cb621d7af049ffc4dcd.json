{"ast":null,"code":"import requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport subDays from \"../subDays/index.js\";\n\n/**\r\n * @name previousDay\r\n * @category Weekday Helpers\r\n * @summary When is the previous day of the week?\r\n *\r\n * @description\r\n * When is the previous day of the week? 0-6 the day of the week, 0 represents Sunday.\r\n *\r\n * @param {Date | number} date - the date to check\r\n * @param {number} day - day of the week\r\n * @returns {Date} - the date is the previous day of week\r\n * @throws {TypeError} - 2 arguments required\r\n *\r\n * @example\r\n * // When is the previous Monday before Mar, 20, 2020?\r\n * const result = previousDay(new Date(2020, 2, 20), 1)\r\n * //=> Mon Mar 16 2020 00:00:00\r\n *\r\n * @example\r\n * // When is the previous Tuesday before Mar, 21, 2020?\r\n * const result = previousDay(new Date(2020, 2, 21), 2)\r\n * //=> Tue Mar 17 2020 00:00:00\r\n */\nexport default function previousDay(date, day) {\n  requiredArgs(2, arguments);\n  var delta = getDay(date) - day;\n  if (delta <= 0) delta += 7;\n  return subDays(date, delta);\n}","map":{"version":3,"names":["requiredArgs","getDay","subDays","previousDay","date","day","arguments","delta"],"sources":["C:/Users/Miia/Documents/Webbiprojekti/Ilmastonmuutos/webproject_react/node_modules/date-fns/esm/previousDay/index.js"],"sourcesContent":["import requiredArgs from \"../_lib/requiredArgs/index.js\";\r\nimport getDay from \"../getDay/index.js\";\r\nimport subDays from \"../subDays/index.js\";\r\n\r\n/**\r\n * @name previousDay\r\n * @category Weekday Helpers\r\n * @summary When is the previous day of the week?\r\n *\r\n * @description\r\n * When is the previous day of the week? 0-6 the day of the week, 0 represents Sunday.\r\n *\r\n * @param {Date | number} date - the date to check\r\n * @param {number} day - day of the week\r\n * @returns {Date} - the date is the previous day of week\r\n * @throws {TypeError} - 2 arguments required\r\n *\r\n * @example\r\n * // When is the previous Monday before Mar, 20, 2020?\r\n * const result = previousDay(new Date(2020, 2, 20), 1)\r\n * //=> Mon Mar 16 2020 00:00:00\r\n *\r\n * @example\r\n * // When is the previous Tuesday before Mar, 21, 2020?\r\n * const result = previousDay(new Date(2020, 2, 21), 2)\r\n * //=> Tue Mar 17 2020 00:00:00\r\n */\r\nexport default function previousDay(date, day) {\r\n  requiredArgs(2, arguments);\r\n  var delta = getDay(date) - day;\r\n  if (delta <= 0) delta += 7;\r\n  return subDays(date, delta);\r\n}"],"mappings":"AAAA,OAAOA,YAAY,MAAM,+BAA+B;AACxD,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,OAAO,MAAM,qBAAqB;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAW,CAACC,IAAI,EAAEC,GAAG,EAAE;EAC7CL,YAAY,CAAC,CAAC,EAAEM,SAAS,CAAC;EAC1B,IAAIC,KAAK,GAAGN,MAAM,CAACG,IAAI,CAAC,GAAGC,GAAG;EAC9B,IAAIE,KAAK,IAAI,CAAC,EAAEA,KAAK,IAAI,CAAC;EAC1B,OAAOL,OAAO,CAACE,IAAI,EAAEG,KAAK,CAAC;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}