{"ast":null,"code":"import max from \"../max/index.js\";\nimport min from \"../min/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name clamp\r\n * @category Interval Helpers\r\n * @summary Return a date bounded by the start and the end of the given interval\r\n *\r\n * @description\r\n * Clamps a date to the lower bound with the start of the interval and the upper\r\n * bound with the end of the interval.\r\n *\r\n * - When the date is less than the start of the interval, the start is returned.\r\n * - When the date is greater than the end of the interval, the end is returned.\r\n * - Otherwise the date is returned.\r\n *\r\n * @example\r\n * // What is Mar, 21, 2021 bounded to an interval starting at Mar, 22, 2021 and ending at Apr, 01, 2021\r\n * const result = clamp(new Date(2021, 2, 21), {\r\n *   start: new Date(2021, 2, 22),\r\n *   end: new Date(2021, 3, 1),\r\n * })\r\n * //=> Mon Mar 22 2021 00:00:00\r\n *\r\n * @param {Date | Number} date - the date to be bounded\r\n * @param {Interval} interval - the interval to bound to\r\n * @returns {Date} the date bounded by the start and the end of the interval\r\n * @throws {TypeError} 2 arguments required\r\n */\n\nexport default function clamp(date, _ref) {\n  var start = _ref.start,\n    end = _ref.end;\n  requiredArgs(2, arguments);\n  return min([max([date, start]), end]);\n}","map":{"version":3,"names":["max","min","requiredArgs","clamp","date","_ref","start","end","arguments"],"sources":["C:/Users/Miia/Documents/Webbiprojekti/Ilmastonmuutos/webproject_react/node_modules/date-fns/esm/clamp/index.js"],"sourcesContent":["import max from \"../max/index.js\";\r\nimport min from \"../min/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name clamp\r\n * @category Interval Helpers\r\n * @summary Return a date bounded by the start and the end of the given interval\r\n *\r\n * @description\r\n * Clamps a date to the lower bound with the start of the interval and the upper\r\n * bound with the end of the interval.\r\n *\r\n * - When the date is less than the start of the interval, the start is returned.\r\n * - When the date is greater than the end of the interval, the end is returned.\r\n * - Otherwise the date is returned.\r\n *\r\n * @example\r\n * // What is Mar, 21, 2021 bounded to an interval starting at Mar, 22, 2021 and ending at Apr, 01, 2021\r\n * const result = clamp(new Date(2021, 2, 21), {\r\n *   start: new Date(2021, 2, 22),\r\n *   end: new Date(2021, 3, 1),\r\n * })\r\n * //=> Mon Mar 22 2021 00:00:00\r\n *\r\n * @param {Date | Number} date - the date to be bounded\r\n * @param {Interval} interval - the interval to bound to\r\n * @returns {Date} the date bounded by the start and the end of the interval\r\n * @throws {TypeError} 2 arguments required\r\n */\r\n\r\nexport default function clamp(date, _ref) {\r\n  var start = _ref.start,\r\n      end = _ref.end;\r\n  requiredArgs(2, arguments);\r\n  return min([max([date, start]), end]);\r\n}"],"mappings":"AAAA,OAAOA,GAAG,MAAM,iBAAiB;AACjC,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,YAAY,MAAM,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,KAAK,CAACC,IAAI,EAAEC,IAAI,EAAE;EACxC,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;IAClBC,GAAG,GAAGF,IAAI,CAACE,GAAG;EAClBL,YAAY,CAAC,CAAC,EAAEM,SAAS,CAAC;EAC1B,OAAOP,GAAG,CAAC,CAACD,GAAG,CAAC,CAACI,IAAI,EAAEE,KAAK,CAAC,CAAC,EAAEC,GAAG,CAAC,CAAC;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}