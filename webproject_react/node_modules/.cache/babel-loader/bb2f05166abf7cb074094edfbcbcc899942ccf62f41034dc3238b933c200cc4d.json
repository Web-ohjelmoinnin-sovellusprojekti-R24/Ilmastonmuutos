{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\topia\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\Ilmastonmuutos\\\\webproject_react\\\\src\\\\components\\\\try.js\",\n  _s = $RefreshSig$();\nimport { Chart } from \"chart.js/auto\";\nimport \"chartjs-adapter-luxon\";\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://127.0.0.1:8080/getalldata\";\nexport default function TimeLineGraphDemo() {\n  _s();\n  const [data, setData] = useState();\n  useEffect(() => {\n    const address = URL;\n    console.log(address);\n    axios.get(address).then(response => {\n      console.log(response.data);\n      setData(response.data);\n    }).catch(error => {\n      alert(error);\n    });\n  }, []);\n  const chardata = {\n    labels: ['Energy', 'Industrial processes', 'Agriculture', 'Waste'],\n    datasets: [{\n      label: 'Share of global greenhouse gas emissions',\n      data: data,\n      backgroundColor: ['rgb(255, 99, 132)', 'rgb(54, 162, 235)', 'rgb(255, 205, 86)'],\n      hoverOffset: 4\n    }]\n  };\n  const config = {\n    type: 'doughnut',\n    data: data && data.map(d => d.sector_percent)\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"Time Line Graph Demonstration\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"1000px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TimeLineGraphDemo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(TimeLineGraphDemo, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n_c = TimeLineGraphDemo;\nvar _c;\n$RefreshReg$(_c, \"TimeLineGraphDemo\");","map":{"version":3,"names":["Chart","axios","React","useEffect","useState","Doughnut","URL","TimeLineGraphDemo","data","setData","address","console","log","get","then","response","catch","error","alert","chardata","labels","datasets","label","backgroundColor","hoverOffset","config","type","map","d","sector_percent","options","responsive","plugins","legend","position","title","display","text","width"],"sources":["C:/Users/topia/OneDrive/Työpöytä/Ilmastonmuutos/webproject_react/src/components/try.js"],"sourcesContent":["import { Chart } from \"chart.js/auto\";\r\nimport \"chartjs-adapter-luxon\";\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\nconst URL = \"http://127.0.0.1:8080/getalldata\"\r\n\r\n\r\nexport default function TimeLineGraphDemo() {\r\n  \r\n  \r\nconst [data, setData] = useState();\r\nuseEffect(() => {\r\n    const address = URL\r\n    console.log(address);\r\n    axios.get(address)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setData(response.data);\r\n        }).catch(error => {\r\n            alert(error)\r\n        })\r\n\r\n}, [])\r\n  \r\nconst chardata = {\r\n    labels: [\r\n    'Energy',\r\n    'Industrial processes',\r\n    'Agriculture',\r\n    'Waste'\r\n    ],\r\n    datasets: [{\r\n      label: 'Share of global greenhouse gas emissions',\r\n      data:data,\r\n      backgroundColor: [\r\n        'rgb(255, 99, 132)',\r\n        'rgb(54, 162, 235)',\r\n        'rgb(255, 205, 86)'\r\n      ],\r\n      hoverOffset: 4\r\n    }]\r\n  };\r\nconst config = {\r\n  type: 'doughnut',\r\n  data: data && data.map(d => d.sector_percent),\r\n};\r\n  \r\nconst options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Time Line Graph Demonstration\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"1000px\" }}>\r\n      <h1>TimeLineGraphDemo</h1>\r\n      <Doughnut options={options} data={data} />\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,KAAK,QAAQ,eAAe;AACrC,OAAO,uBAAuB;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,iBAAiB;AAAC;AAG3C,MAAMC,GAAG,GAAG,kCAAkC;AAG9C,eAAe,SAASC,iBAAiB,GAAG;EAAA;EAG5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,EAAE;EAClCD,SAAS,CAAC,MAAM;IACZ,MAAMO,OAAO,GAAGJ,GAAG;IACnBK,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpBT,KAAK,CAACY,GAAG,CAACH,OAAO,CAAC,CACbI,IAAI,CAAEC,QAAQ,IAAK;MAChBJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACP,IAAI,CAAC;MAC1BC,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC;IAC1B,CAAC,CAAC,CAACQ,KAAK,CAACC,KAAK,IAAI;MACdC,KAAK,CAACD,KAAK,CAAC;IAChB,CAAC,CAAC;EAEV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,QAAQ,GAAG;IACbC,MAAM,EAAE,CACR,QAAQ,EACR,sBAAsB,EACtB,aAAa,EACb,OAAO,CACN;IACDC,QAAQ,EAAE,CAAC;MACTC,KAAK,EAAE,0CAA0C;MACjDd,IAAI,EAACA,IAAI;MACTe,eAAe,EAAE,CACf,mBAAmB,EACnB,mBAAmB,EACnB,mBAAmB,CACpB;MACDC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACH,MAAMC,MAAM,GAAG;IACbC,IAAI,EAAE,UAAU;IAChBlB,IAAI,EAAEA,IAAI,IAAIA,IAAI,CAACmB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,cAAc;EAC9C,CAAC;EAED,MAAMC,OAAO,GAAG;IACZC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,oBACE;IAAK,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAS,CAAE;IAAA,wBAC9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B,eAC1B,QAAC,QAAQ;MAAC,OAAO,EAAER,OAAQ;MAAC,IAAI,EAAEtB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACtC;AAEV;AAAC,GA3DuBD,iBAAiB;AAAA,KAAjBA,iBAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}