{"ast":null,"code":"import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name isEqual\r\n * @category Common Helpers\r\n * @summary Are the given dates equal?\r\n *\r\n * @description\r\n * Are the given dates equal?\r\n *\r\n * @param {Date|Number} dateLeft - the first date to compare\r\n * @param {Date|Number} dateRight - the second date to compare\r\n * @returns {Boolean} the dates are equal\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\r\n * const result = isEqual(\r\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\r\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\r\n * )\r\n * //=> false\r\n */\n\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","map":{"version":3,"names":["toDate","requiredArgs","isEqual","dirtyLeftDate","dirtyRightDate","arguments","dateLeft","dateRight","getTime"],"sources":["C:/Users/Miia/Documents/Webbiprojekti/Ilmastonmuutos/webproject_react/node_modules/date-fns/esm/isEqual/index.js"],"sourcesContent":["import toDate from \"../toDate/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name isEqual\r\n * @category Common Helpers\r\n * @summary Are the given dates equal?\r\n *\r\n * @description\r\n * Are the given dates equal?\r\n *\r\n * @param {Date|Number} dateLeft - the first date to compare\r\n * @param {Date|Number} dateRight - the second date to compare\r\n * @returns {Boolean} the dates are equal\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\r\n * const result = isEqual(\r\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\r\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\r\n * )\r\n * //=> false\r\n */\r\n\r\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\r\n  requiredArgs(2, arguments);\r\n  var dateLeft = toDate(dirtyLeftDate);\r\n  var dateRight = toDate(dirtyRightDate);\r\n  return dateLeft.getTime() === dateRight.getTime();\r\n}"],"mappings":"AAAA,OAAOA,MAAM,MAAM,oBAAoB;AACvC,OAAOC,YAAY,MAAM,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,OAAO,CAACC,aAAa,EAAEC,cAAc,EAAE;EAC7DH,YAAY,CAAC,CAAC,EAAEI,SAAS,CAAC;EAC1B,IAAIC,QAAQ,GAAGN,MAAM,CAACG,aAAa,CAAC;EACpC,IAAII,SAAS,GAAGP,MAAM,CAACI,cAAc,CAAC;EACtC,OAAOE,QAAQ,CAACE,OAAO,EAAE,KAAKD,SAAS,CAACC,OAAO,EAAE;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}