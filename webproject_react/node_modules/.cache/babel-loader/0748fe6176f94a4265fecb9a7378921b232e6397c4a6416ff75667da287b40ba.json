{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\topia\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\Ilmastonmuutos\\\\webproject_react\\\\src\\\\components\\\\try.js\";\nimport { Chart } from \"chart.js/auto\";\nimport \"chartjs-adapter-luxon\";\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://127.0.0.1:8080/getalldata\";\nconst [data, setData] = useState();\nuseEffect(() => {\n  const address = URL;\n  console.log(address);\n  axios.get(address).then(response => {\n    console.log(response.data);\n    setData(response.data);\n  }).catch(error => {\n    alert(error);\n  });\n}, []);\nexport default function TimeLineGraphDemo() {\n  const data = {\n    datasets: [{\n      label: \"Example Set 1\",\n      data: [data && data.map(d => d.sector_percent)],\n      borderColor: \"rgb(255, 99, 132)\",\n      backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      parsing: {\n        xAxisKey: \"time\",\n        yAxisKey: \"value\"\n      },\n      pointRadius: 1\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\"\n      },\n      title: {\n        display: true,\n        text: \"Time Line Graph Demonstration\"\n      }\n    },\n    scales: {\n      x: {\n        type: \"time\",\n        time: {\n          unit: \"month\"\n        }\n      },\n      yAxis: {\n        type: \"linear\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"1000px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TimeLineGraphDemo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_c = TimeLineGraphDemo;\nvar _c;\n$RefreshReg$(_c, \"TimeLineGraphDemo\");","map":{"version":3,"names":["Chart","axios","React","useEffect","useState","Doughnut","URL","data","setData","address","console","log","get","then","response","catch","error","alert","TimeLineGraphDemo","datasets","label","map","d","sector_percent","borderColor","backgroundColor","parsing","xAxisKey","yAxisKey","pointRadius","options","responsive","plugins","legend","position","title","display","text","scales","x","type","time","unit","yAxis","width"],"sources":["C:/Users/topia/OneDrive/Työpöytä/Ilmastonmuutos/webproject_react/src/components/try.js"],"sourcesContent":["\r\nimport { Chart } from \"chart.js/auto\";\r\nimport \"chartjs-adapter-luxon\";\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\nconst URL = \"http://127.0.0.1:8080/getalldata\"\r\n\r\nconst [data, setData] = useState();\r\nuseEffect(() => {\r\n    const address = URL\r\n    console.log(address);\r\n    axios.get(address)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            setData(response.data);\r\n        }).catch(error => {\r\n            alert(error)\r\n        })\r\n\r\n}, [])\r\n\r\nexport default function TimeLineGraphDemo() {\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        label: \"Example Set 1\",\r\n        data: [\r\n            data && data.map(d => d.sector_percent),\r\n        ],\r\n        borderColor: \"rgb(255, 99, 132)\",\r\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n        parsing: {\r\n          xAxisKey: \"time\",\r\n          yAxisKey: \"value\",\r\n        },\r\n        pointRadius: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Time Line Graph Demonstration\",\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        type: \"time\",\r\n        time: {\r\n          unit: \"month\",\r\n        },\r\n      },\r\n      yAxis: {\r\n        type: \"linear\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"1000px\" }}>\r\n      <h1>TimeLineGraphDemo</h1>\r\n      <Line options={options} data={data} />\r\n    </div>\r\n  );\r\n}"],"mappings":";AACA,SAASA,KAAK,QAAQ,eAAe;AACrC,OAAO,uBAAuB;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,iBAAiB;AAAC;AAG3C,MAAMC,GAAG,GAAG,kCAAkC;AAE9C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,EAAE;AAClCD,SAAS,CAAC,MAAM;EACZ,MAAMM,OAAO,GAAGH,GAAG;EACnBI,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpBR,KAAK,CAACW,GAAG,CAACH,OAAO,CAAC,CACbI,IAAI,CAAEC,QAAQ,IAAK;IAChBJ,OAAO,CAACC,GAAG,CAACG,QAAQ,CAACP,IAAI,CAAC;IAC1BC,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC;EAC1B,CAAC,CAAC,CAACQ,KAAK,CAACC,KAAK,IAAI;IACdC,KAAK,CAACD,KAAK,CAAC;EAChB,CAAC,CAAC;AAEV,CAAC,EAAE,EAAE,CAAC;AAEN,eAAe,SAASE,iBAAiB,GAAG;EAC1C,MAAMX,IAAI,GAAG;IACXY,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,eAAe;MACtBb,IAAI,EAAE,CACFA,IAAI,IAAIA,IAAI,CAACc,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,cAAc,CAAC,CAC1C;MACDC,WAAW,EAAE,mBAAmB;MAChCC,eAAe,EAAE,yBAAyB;MAC1CC,OAAO,EAAE;QACPC,QAAQ,EAAE,MAAM;QAChBC,QAAQ,EAAE;MACZ,CAAC;MACDC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,IAAI,EAAE;QACR;MACF,CAAC;MACDC,KAAK,EAAE;QACLH,IAAI,EAAE;MACR;IACF;EACF,CAAC;EAED,oBACE;IAAK,KAAK,EAAE;MAAEI,KAAK,EAAE;IAAS,CAAE;IAAA,wBAC9B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA0B,eAC1B,QAAC,IAAI;MAAC,OAAO,EAAEd,OAAQ;MAAC,IAAI,EAAEvB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEV;AAAC,KAjDuBW,iBAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}