{"ast":null,"code":"import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\r\n * @name differenceInMonths\r\n * @category Month Helpers\r\n * @summary Get the number of full months between the given dates.\r\n *\r\n * @description\r\n * Get the number of full months between the given dates using trunc as a default rounding method.\r\n *\r\n * @param {Date|Number} dateLeft - the later date\r\n * @param {Date|Number} dateRight - the earlier date\r\n * @returns {Number} the number of full months\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // How many full months are between 31 January 2014 and 1 September 2014?\r\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\r\n * //=> 7\r\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","map":{"version":3,"names":["toDate","differenceInCalendarMonths","compareAsc","requiredArgs","isLastDayOfMonth","differenceInMonths","dirtyDateLeft","dirtyDateRight","arguments","dateLeft","dateRight","sign","difference","Math","abs","result","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","Number"],"sources":["C:/Users/Miia/Documents/Webbiprojekti/Ilmastonmuutos/webproject_react/node_modules/date-fns/esm/differenceInMonths/index.js"],"sourcesContent":["import toDate from \"../toDate/index.js\";\r\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\r\nimport compareAsc from \"../compareAsc/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\r\n/**\r\n * @name differenceInMonths\r\n * @category Month Helpers\r\n * @summary Get the number of full months between the given dates.\r\n *\r\n * @description\r\n * Get the number of full months between the given dates using trunc as a default rounding method.\r\n *\r\n * @param {Date|Number} dateLeft - the later date\r\n * @param {Date|Number} dateRight - the earlier date\r\n * @returns {Number} the number of full months\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // How many full months are between 31 January 2014 and 1 September 2014?\r\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\r\n * //=> 7\r\n */\r\n\r\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\r\n  requiredArgs(2, arguments);\r\n  var dateLeft = toDate(dirtyDateLeft);\r\n  var dateRight = toDate(dirtyDateRight);\r\n  var sign = compareAsc(dateLeft, dateRight);\r\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\r\n  var result; // Check for the difference of less than month\r\n\r\n  if (difference < 1) {\r\n    result = 0;\r\n  } else {\r\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\r\n      // This will check if the date is end of Feb and assign a higher end of month date\r\n      // to compare it with Jan\r\n      dateLeft.setDate(30);\r\n    }\r\n\r\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\r\n    // If so, result must be decreased by 1 in absolute value\r\n\r\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\r\n\r\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\r\n      isLastMonthNotFull = false;\r\n    }\r\n\r\n    result = sign * (difference - Number(isLastMonthNotFull));\r\n  } // Prevent negative zero\r\n\r\n\r\n  return result === 0 ? 0 : result;\r\n}"],"mappings":"AAAA,OAAOA,MAAM,MAAM,oBAAoB;AACvC,OAAOC,0BAA0B,MAAM,wCAAwC;AAC/E,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,kBAAkB,CAACC,aAAa,EAAEC,cAAc,EAAE;EACxEJ,YAAY,CAAC,CAAC,EAAEK,SAAS,CAAC;EAC1B,IAAIC,QAAQ,GAAGT,MAAM,CAACM,aAAa,CAAC;EACpC,IAAII,SAAS,GAAGV,MAAM,CAACO,cAAc,CAAC;EACtC,IAAII,IAAI,GAAGT,UAAU,CAACO,QAAQ,EAAEC,SAAS,CAAC;EAC1C,IAAIE,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACb,0BAA0B,CAACQ,QAAQ,EAAEC,SAAS,CAAC,CAAC;EAC1E,IAAIK,MAAM,CAAC,CAAC;;EAEZ,IAAIH,UAAU,GAAG,CAAC,EAAE;IAClBG,MAAM,GAAG,CAAC;EACZ,CAAC,MAAM;IACL,IAAIN,QAAQ,CAACO,QAAQ,EAAE,KAAK,CAAC,IAAIP,QAAQ,CAACQ,OAAO,EAAE,GAAG,EAAE,EAAE;MACxD;MACA;MACAR,QAAQ,CAACS,OAAO,CAAC,EAAE,CAAC;IACtB;IAEAT,QAAQ,CAACU,QAAQ,CAACV,QAAQ,CAACO,QAAQ,EAAE,GAAGL,IAAI,GAAGC,UAAU,CAAC,CAAC,CAAC;IAC5D;;IAEA,IAAIQ,kBAAkB,GAAGlB,UAAU,CAACO,QAAQ,EAAEC,SAAS,CAAC,KAAK,CAACC,IAAI,CAAC,CAAC;;IAEpE,IAAIP,gBAAgB,CAACJ,MAAM,CAACM,aAAa,CAAC,CAAC,IAAIM,UAAU,KAAK,CAAC,IAAIV,UAAU,CAACI,aAAa,EAAEI,SAAS,CAAC,KAAK,CAAC,EAAE;MAC7GU,kBAAkB,GAAG,KAAK;IAC5B;IAEAL,MAAM,GAAGJ,IAAI,IAAIC,UAAU,GAAGS,MAAM,CAACD,kBAAkB,CAAC,CAAC;EAC3D,CAAC,CAAC;;EAGF,OAAOL,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGA,MAAM;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}