{"ast":null,"code":"import isSameWeek from \"../isSameWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n\n/**\r\n * @name isThisWeek\r\n * @category Week Helpers\r\n * @summary Is the given date in the same week as the current date?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date in the same week as the current date?\r\n *\r\n * > ⚠️ Please note that this function is not present in the FP submodule as\r\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\r\n *\r\n * @param {Date|Number} date - the date to check\r\n * @param {Object} [options] - the object with options\r\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\r\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Boolean} the date is in this week\r\n * @throws {TypeError} 1 argument required\r\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\r\n *\r\n * @example\r\n * // If today is 25 September 2014, is 21 September 2014 in this week?\r\n * const result = isThisWeek(new Date(2014, 8, 21))\r\n * //=> true\r\n *\r\n * @example\r\n * // If today is 25 September 2014 and week starts with Monday\r\n * // is 21 September 2014 in this week?\r\n * const result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\r\n * //=> false\r\n */\nexport default function isThisWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return isSameWeek(dirtyDate, Date.now(), options);\n}","map":{"version":3,"names":["isSameWeek","requiredArgs","isThisWeek","dirtyDate","options","arguments","Date","now"],"sources":["C:/Users/Miia/Documents/Webbiprojekti/Ilmastonmuutos/webproject_react/node_modules/date-fns/esm/isThisWeek/index.js"],"sourcesContent":["import isSameWeek from \"../isSameWeek/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n\r\n/**\r\n * @name isThisWeek\r\n * @category Week Helpers\r\n * @summary Is the given date in the same week as the current date?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date in the same week as the current date?\r\n *\r\n * > ⚠️ Please note that this function is not present in the FP submodule as\r\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\r\n *\r\n * @param {Date|Number} date - the date to check\r\n * @param {Object} [options] - the object with options\r\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\r\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\r\n * @returns {Boolean} the date is in this week\r\n * @throws {TypeError} 1 argument required\r\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\r\n *\r\n * @example\r\n * // If today is 25 September 2014, is 21 September 2014 in this week?\r\n * const result = isThisWeek(new Date(2014, 8, 21))\r\n * //=> true\r\n *\r\n * @example\r\n * // If today is 25 September 2014 and week starts with Monday\r\n * // is 21 September 2014 in this week?\r\n * const result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\r\n * //=> false\r\n */\r\nexport default function isThisWeek(dirtyDate, options) {\r\n  requiredArgs(1, arguments);\r\n  return isSameWeek(dirtyDate, Date.now(), options);\r\n}"],"mappings":"AAAA,OAAOA,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,YAAY,MAAM,+BAA+B;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,UAAU,CAACC,SAAS,EAAEC,OAAO,EAAE;EACrDH,YAAY,CAAC,CAAC,EAAEI,SAAS,CAAC;EAC1B,OAAOL,UAAU,CAACG,SAAS,EAAEG,IAAI,CAACC,GAAG,EAAE,EAAEH,OAAO,CAAC;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}