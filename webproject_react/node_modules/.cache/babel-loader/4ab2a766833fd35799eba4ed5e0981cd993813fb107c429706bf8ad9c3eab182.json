{"ast":null,"code":"import startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name isSameISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Are the given dates in the same ISO week-numbering year?\r\n *\r\n * @description\r\n * Are the given dates in the same ISO week-numbering year?\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|Number} dateLeft - the first date to check\r\n * @param {Date|Number} dateRight - the second date to check\r\n * @returns {Boolean} the dates are in the same ISO week-numbering year\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\r\n * const result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\r\n * //=> true\r\n */\n\nexport default function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfYear = startOfISOWeekYear(dirtyDateLeft);\n  var dateRightStartOfYear = startOfISOWeekYear(dirtyDateRight);\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();\n}","map":{"version":3,"names":["startOfISOWeekYear","requiredArgs","isSameISOWeekYear","dirtyDateLeft","dirtyDateRight","arguments","dateLeftStartOfYear","dateRightStartOfYear","getTime"],"sources":["C:/Users/Miia/Documents/Webbiprojekti/Ilmastonmuutos/webproject_react/node_modules/date-fns/esm/isSameISOWeekYear/index.js"],"sourcesContent":["import startOfISOWeekYear from \"../startOfISOWeekYear/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name isSameISOWeekYear\r\n * @category ISO Week-Numbering Year Helpers\r\n * @summary Are the given dates in the same ISO week-numbering year?\r\n *\r\n * @description\r\n * Are the given dates in the same ISO week-numbering year?\r\n *\r\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\r\n *\r\n * @param {Date|Number} dateLeft - the first date to check\r\n * @param {Date|Number} dateRight - the second date to check\r\n * @returns {Boolean} the dates are in the same ISO week-numbering year\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?\r\n * const result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))\r\n * //=> true\r\n */\r\n\r\nexport default function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {\r\n  requiredArgs(2, arguments);\r\n  var dateLeftStartOfYear = startOfISOWeekYear(dirtyDateLeft);\r\n  var dateRightStartOfYear = startOfISOWeekYear(dirtyDateRight);\r\n  return dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime();\r\n}"],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,gCAAgC;AAC/D,OAAOC,YAAY,MAAM,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,iBAAiB,CAACC,aAAa,EAAEC,cAAc,EAAE;EACvEH,YAAY,CAAC,CAAC,EAAEI,SAAS,CAAC;EAC1B,IAAIC,mBAAmB,GAAGN,kBAAkB,CAACG,aAAa,CAAC;EAC3D,IAAII,oBAAoB,GAAGP,kBAAkB,CAACI,cAAc,CAAC;EAC7D,OAAOE,mBAAmB,CAACE,OAAO,EAAE,KAAKD,oBAAoB,CAACC,OAAO,EAAE;AACzE"},"metadata":{},"sourceType":"module","externalDependencies":[]}