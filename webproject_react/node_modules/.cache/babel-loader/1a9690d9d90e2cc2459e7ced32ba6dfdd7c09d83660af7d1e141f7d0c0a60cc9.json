{"ast":null,"code":"import isSameDay from \"../isSameDay/index.js\";\nimport subDays from \"../subDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name isYesterday\r\n * @category Day Helpers\r\n * @summary Is the given date yesterday?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date yesterday?\r\n *\r\n * > ⚠️ Please note that this function is not present in the FP submodule as\r\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\r\n *\r\n * @param {Date|Number} date - the date to check\r\n * @returns {Boolean} the date is yesterday\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\r\n * const result = isYesterday(new Date(2014, 9, 5, 14, 0))\r\n * //=> true\r\n */\n\nexport default function isYesterday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, subDays(Date.now(), 1));\n}","map":{"version":3,"names":["isSameDay","subDays","requiredArgs","isYesterday","dirtyDate","arguments","Date","now"],"sources":["C:/Users/Miia/Documents/Webbiprojekti/Ilmastonmuutos/webproject_react/node_modules/date-fns/esm/isYesterday/index.js"],"sourcesContent":["import isSameDay from \"../isSameDay/index.js\";\r\nimport subDays from \"../subDays/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name isYesterday\r\n * @category Day Helpers\r\n * @summary Is the given date yesterday?\r\n * @pure false\r\n *\r\n * @description\r\n * Is the given date yesterday?\r\n *\r\n * > ⚠️ Please note that this function is not present in the FP submodule as\r\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\r\n *\r\n * @param {Date|Number} date - the date to check\r\n * @returns {Boolean} the date is yesterday\r\n * @throws {TypeError} 1 argument required\r\n *\r\n * @example\r\n * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?\r\n * const result = isYesterday(new Date(2014, 9, 5, 14, 0))\r\n * //=> true\r\n */\r\n\r\nexport default function isYesterday(dirtyDate) {\r\n  requiredArgs(1, arguments);\r\n  return isSameDay(dirtyDate, subDays(Date.now(), 1));\r\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,YAAY,MAAM,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,WAAW,CAACC,SAAS,EAAE;EAC7CF,YAAY,CAAC,CAAC,EAAEG,SAAS,CAAC;EAC1B,OAAOL,SAAS,CAACI,SAAS,EAAEH,OAAO,CAACK,IAAI,CAACC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;AACrD"},"metadata":{},"sourceType":"module","externalDependencies":[]}