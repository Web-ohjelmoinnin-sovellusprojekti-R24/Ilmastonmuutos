{"ast":null,"code":"import startOfHour from \"../startOfHour/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\r\n * @name isSameHour\r\n * @category Hour Helpers\r\n * @summary Are the given dates in the same hour (and same day)?\r\n *\r\n * @description\r\n * Are the given dates in the same hour (and same day)?\r\n *\r\n * @param {Date|Number} dateLeft - the first date to check\r\n * @param {Date|Number} dateRight - the second date to check\r\n * @returns {Boolean} the dates are in the same hour (and same day)\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 5 September 06:00:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 5, 6, 0))\r\n * //=> false\r\n */\n\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}","map":{"version":3,"names":["startOfHour","requiredArgs","isSameHour","dirtyDateLeft","dirtyDateRight","arguments","dateLeftStartOfHour","dateRightStartOfHour","getTime"],"sources":["C:/Users/Miia/Documents/Webbiprojekti/Ilmastonmuutos/webproject_react/node_modules/date-fns/esm/isSameHour/index.js"],"sourcesContent":["import startOfHour from \"../startOfHour/index.js\";\r\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\r\n/**\r\n * @name isSameHour\r\n * @category Hour Helpers\r\n * @summary Are the given dates in the same hour (and same day)?\r\n *\r\n * @description\r\n * Are the given dates in the same hour (and same day)?\r\n *\r\n * @param {Date|Number} dateLeft - the first date to check\r\n * @param {Date|Number} dateRight - the second date to check\r\n * @returns {Boolean} the dates are in the same hour (and same day)\r\n * @throws {TypeError} 2 arguments required\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\r\n * //=> true\r\n *\r\n * @example\r\n * // Are 4 September 2014 06:00:00 and 5 September 06:00:00 in the same hour?\r\n * const result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 5, 6, 0))\r\n * //=> false\r\n */\r\n\r\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\r\n  requiredArgs(2, arguments);\r\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\r\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\r\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\r\n}"],"mappings":"AAAA,OAAOA,WAAW,MAAM,yBAAyB;AACjD,OAAOC,YAAY,MAAM,+BAA+B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,UAAU,CAACC,aAAa,EAAEC,cAAc,EAAE;EAChEH,YAAY,CAAC,CAAC,EAAEI,SAAS,CAAC;EAC1B,IAAIC,mBAAmB,GAAGN,WAAW,CAACG,aAAa,CAAC;EACpD,IAAII,oBAAoB,GAAGP,WAAW,CAACI,cAAc,CAAC;EACtD,OAAOE,mBAAmB,CAACE,OAAO,EAAE,KAAKD,oBAAoB,CAACC,OAAO,EAAE;AACzE"},"metadata":{},"sourceType":"module","externalDependencies":[]}